# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches: [ main ] 
 
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build" 
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x]
        
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: checkout release
      uses: actions/checkout@v3
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Setting .env
        run: 
          echo "MASTER_DB_HOST=${{ secrets.MASTER_DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "PROD_NAME=${{ secrets.PROD_NAME }}" >> .env
          echo "DEV_NAME=${{ secrets.DEV_NAME }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          cat .env

    - name: npm install, build and test
      run: 
        npm install
        npm run build --if-present
        npm test
        
        
    - name: archive mmnt 
      run: tar cvfz ./mmnt.tar.gz *
       
    - name: AWS configure credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
    - name: upload to S3
      run: aws s3 cp --region ap-northeast-2 ./mmnt.tar.gz s3://momentb/archive/
      
    - name: deploy with AWS codeDeploy
      run: aws deploy create-deployment
        --application-name 	mmnt
        --deployment-config-name CodeDeployDefault.OneAtATime
        --deployment-group-name mmnt_group
        --s3-location bucket=momentb,bundleType=tgz,key=archive/mmnt.tar.gz
